services:
  backend:
    container_name: backend
    image: ghcr.io/jules-jean-louis1/plateforme-safebase/backend:latest
    volumes:
      - ./backend:/app
      - ./backups:/app/backups
    ports:
      - "8080:8080"
    depends_on:
      safebase_db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@safebase_db:5432/${DB_NAME}
    networks:
      - app-network

  frontend:
    container_name: frontend
    image: ghcr.io/jules-jean-louis1/plateforme-safebase/frontend:latest
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - API_HOST=http://backend:8080
    networks:
      - app-network

  safebase_db:
    image: postgres:16
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - safebase_db_data:/var/lib/postgresql/data
      - ./sql/safebase_db/safebase.sql:/docker-entrypoint-initdb.d/safebase.sql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - app-network

volumes:
  safebase_db_data:

networks:
  app-network:
    driver: bridge
